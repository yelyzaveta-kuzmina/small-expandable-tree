{"ast":null,"code":"var _jsxFileName = \"/Users/yelyzaveta/Desktop/expandable-tree/src/tree.js\";\nimport React from 'react';\n\nclass Tree extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.onToggle = event => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: event => this.onToggle(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \">\"), this.state.open && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Tree, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.children)));\n  }\n\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/yelyzaveta/Desktop/expandable-tree/src/tree.js"],"names":["React","Tree","Component","state","open","onToggle","event","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADyB;;AAAA,SAGjCC,QAHiC,GAGrBC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd;AACD,KALgC;AAAA;;AAOjCI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAGF,KAAD,IAAW,KAAKD,QAAL,CAAcC,KAAd,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAII,KAAKH,KAAL,CAAWC,IAAX,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKK,KAAL,CAAWC,QAAlB,CADF,CALJ,CADF;AAYD;;AApBgC;;AAuBnC,eAAeT,IAAf","sourcesContent":["import React from 'react';\n\nclass Tree extends React.Component {\n  state = { open: false };\n\n  onToggle = (event) => {\n    this.setState({ open: !this.state.open });\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={(event) => this.onToggle(event)}>\n          >\n        </button>\n        { this.state.open && (\n          <div> \n            <Tree>{this.props.children}</Tree>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Tree;\n"]},"metadata":{},"sourceType":"module"}